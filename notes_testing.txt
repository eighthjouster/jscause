List of sanity checks:
======================

Paste this in a browser's console for a thrifty/nifty new line encoding/decoding tool:
document.body.innerHTML='<textarea onkeyup="document.body.children[1].innerHTML=event.target.value.replace(/\\n/g,\'\\\\n\')"></textarea><textarea onkeyup="document.body.children[2].innerHTML=event.target.value.replace(/\\\\n/g,\'\\n\')"></textarea><textarea></textarea>';

- Content:
{
  "sites": ""
}
- Expect:
ERROR: Server configuration:  Expected an array of sites.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": []
}
- Expect:
ERROR: Configuration:  sites cannot be empty.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1]
}
- Expect:
ERROR: Server configuration: Logging: directoryName: Cannot find directory: [*]
ERROR: Server not started.  No sites are running.
- Expect:
ERROR: Configuration:  sites cannot be empty.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "unknown": 1
}
- Expect:
ERROR: "unknown" is not a valid configuration key.
ERROR: Check that all the keys and values in jscause.conf are valid.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1]p
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token p in JSON at position 14
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token } in JSON at position 16
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "unknown": 1
}
- Expect:
ERROR: "unknown" is not a valid configuration key.
ERROR: Check that all the keys and values in jscause.conf are valid.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "logging": 1
}
- Expect:
ERROR: Server configuration:  Expected a valid logging configuration value.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "logging": {}
}
- Expect:
ERROR: Server configuration: Logging: directoryName: Cannot find directory: [*]
ERROR: Server not started.  No sites are running.

8. Add an empty './logs' directory.

9. jscause.conf with empty or invalid formats, part 2. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [1],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Missing name.
ERROR: Site (no name) not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
    },
  ],
  "logging": {}
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token ] in JSON at position 18
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Missing name.
ERROR: Site (no name) not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": ""
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Missing name.
ERROR: Site (no name) not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site' is missing port.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": ""
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration:  Site name 'My Site' has an invalid port.  Integer number expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site' is missing rootdirectoryname.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": ""
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site': rootdirectoryname cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": 4
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site': rootdirectoryname expects a string value.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR:  Cannot find directory: sites/mysite
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

10. Add an empty './sites/mysite' directory.

11. Add an empty './sites/mysite/workbench' directory.

12. jscause.conf with empty or invalid formats, part 3. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Cannot find configuration/site.json file.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

13. Add an empty './sites/mysite/configuration/site.json' file.

14. jscause.conf with empty or invalid formats, part 4. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site 'My Site': site.json is invalid.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

15. mysite/configuration/site.json with empty or invalid formats, part 1. With the content, start the server.  Nodejs must quit:
- Content:
{}
- Expect:
ERROR: Site configuration:  The following configuration attributes were not found:
ERROR: - logging
ERROR: - hostname
ERROR: - canupload
ERROR: - maxpayloadsizebytes
ERROR: - mimetypes
ERROR: - tempworkdirectory
ERROR: - jscpextensionrequired
ERROR: - httppoweredbyheader
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": 1
}
- Expect:
ERROR: Site configuration:  Invalid hostname.  String value expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": ""
}
- Expect:
ERROR: Site configuration:  hostname cannot be empty.
ERROR: Site configuration:  The following configuration attributes were not found:
ERROR: - logging
ERROR: - canupload
ERROR: - maxpayloadsizebytes
ERROR: - mimetypes
ERROR: - tempworkdirectory
ERROR: - jscpextensionrequired
ERROR: - httppoweredbyheader
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1"
}
- Expect:
ERROR: Site configuration:  The following configuration attributes were not found:
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": ""
}
- Expect:
ERROR: Site configuration:  Invalid canupload.  Boolean expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": ""
}
- Expect:
ERROR: Site configuration:  Invalid maxpayloadsizebytes.  Integer number expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": 1
}
- Expect:
ERROR: Site configuration:  Invalid jscpextensionrequired.  String value expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": ""
}
- Expect:
ERROR: Site configuration:  jscpextensionrequired cannot be empty.  Use 'never' (recommended), 'optional' or 'always'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "random"
}
- Expect:
ERROR: Site configuration:  invalid jscpextensionrequired value.  Use 'never' (recommended), 'optional' or 'always'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": 1
}
- Expect:
ERROR: Site configuration:  Invalid httppoweredbyheader.  String value expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": ""
}
- Expect:
ERROR: Site configuration:  httppoweredbyheader cannot be empty.  Use 'include' or 'exclude'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "random"
}
- Expect:
ERROR: Site configuration:  invalid httppoweredbyheader value.  Use 'include' or 'exclude'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": 1
}
- Expect:
ERROR: Site configuration:  Invalid httpscertfile.  String value expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": ""
}
- Expect:
ERROR: Site configuration:  httpscertfile cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": 1
}
- Expect:
ERROR: Site configuration:  Invalid httpskeyfile.  String value expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": ""
}
- Expect:
ERROR: Site configuration:  httpskeyfile cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": 1
}
- Expect:
ERROR: Site configuration:  Invalid tempworkdirectory.  String value expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": ""
}
- Expect:
ERROR: Site configuration:  tempworkdirectory cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": 1
}
- Expect:
ERROR: Site configuration:  Invalid mimetypes.  Object expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {}
}
- Expect:
ERROR: Site configuration:  The following configuration attribute was not found:
ERROR: - logging
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site 'My Site' has an invalid logging directoryname.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "random": {}
  }
}
- Expect:
ERROR: Site configuration:  mimetype has an invalid 'random' name.  Expected: 'include', 'exclude'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "include": 1
  }
}
- Expect:
ERROR: Site configuration:  mimetype has an invalid 'include' attribute value. Object (key, value) expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "include": {
      "": ""
    }
  }
}
- Expect:
ERROR: Site configuration:  mimetype name cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "include": {
      "png": ""
    }
  }
}
- Expect:
WARNING: Site configuration: png mimetype value is empty.  Assumed application/octet-stream.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "include": ["png"]
  }
}
- Expect:
ERROR: Site configuration:  mimetype has an invalid 'include' attribute value. Object (key, value) expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "exclude": {}
  }
}
- Expect:
ERROR: Site configuration:  mimetype has an invalid 'exclude' attribute value. Array expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {
    "exclude": [""]
  }
}
- Expect:
ERROR: Site configuration:  mimetype name cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "random": "random"
  }
}
- Expect:
ERROR: Site configuration: Logging: 'random' is not a valid configuration key.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "fileOutput": 1
  }
}
- Expect:
ERROR: Site configuration: Logging: fileoutput must be either 'enabled' or 'disabled'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "fileOutput": "disabled",
    "consoleOutput": 1
  }
}
- Expect:
ERROR: Site configuration: Logging: consoleOutput must be either 'enabled' or 'disabled'.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "directoryName": 1
  }
}
- Expect:
ERROR: Site configuration: 'My Site' site logging: invalid directoryname.  String expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "directoryName": ""
  }
}
- Expect:
ERROR: Site configuration: Site 'My Site': logging directoryname cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "directoryName": "random"
  }
}
- Expect:
ERROR: Site configuration: Logging: directoryName: Cannot find directory: [*]
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

15. Add an empty './sites/mysite/localLogs' directory.

16. mysite/configuration/site.json with empty or invalid formats, part 2. With the content, start the server.  Nodejs must quit:
- Content:
{
  "logging": {
    "directoryName": "/localLogs"
  }
}
- Expect:
ERROR: Site configuration: 'My Site' site logging: directoryname must be a relative path.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "logging": {
    "directoryName": "./randomDirectory"
  }
}
- Expect:
ERROR: Site configuration: Logging: directoryName: Cannot find directory: [*]
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "fileOutput": "enabled",
    "directoryName": "./localLogs",
    "consoleOutput": "enabled"
  }
}
- Expect:
ERROR: Site 'My Site': could not read directory: sites/mysite/website
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "fileOutput": "enabled",
    "directoryName": "./localLogs",
    "consoleOutput": "enabled",
    "logFileSizeThreshold": 0
  }
}
- Expect:
ERROR: Site configuration: 'My Site' site logging: 'perSite' section must not have a 'logFileSizeThreshold' configuration key.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

17. Add an empty './sites/mysite/website' directory.

18. mysite/configuration/site.json with empty or invalid formats, part 3. With the content, start the server.  Nodejs must NOT quit:

- Content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "fileOutput": "enabled",
    "directoryName": "./localLogs",
    "consoleOutput": "enabled"
  }
}
- Expect:
INFO: Reading configuration for site 'My Site' from 'sites/mysite'
INFO: Site 'My Site' at http://jscausesite1:3000/ assigned to server 0
INFO: The following sites were set up successfully:
INFO: 'My Site'
INFO: Will start listening.
INFO: Server 0 listening on port 3000

19. jscause.conf with empty or invalid formats, part 5. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite",
      "enableHTTPS": 0
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site' has an invalid 'enablehttps' value.  Boolean expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {
    "general": ""
  }
}
- Expect:
ERROR: Configuration: logging:  Invalid value for general.  Object expected
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite",
      "enableHTTPS": false
    }
  ],
  "logging": {
    "general": {
      "fileOutput": "enabled",
      "directoryName": "logs",
      "consoleOutput": "enabled",
      "logFileSizeThreshold": ""
    }
  }
}
- Expect:
ERROR: Site configuration: Logging: 'logFileSizeThreshold' is invalid.  Integer number expected.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite",
      "enableHTTPS": false
    }
  ],
  "logging": {
    "general": {
      "fileOutput": "enabled",
      "directoryName": "logs",
      "consoleOutput": "enabled",
      "logFileSizeThreshold": -1
    }
  }
}
- Expect:
ERROR: Site configuration: Logging: 'logFileSizeThreshold' must be 0 or greater.
ERROR: Server not started.  No sites are running.


20. Modify './sites/mysite/configuration/site.json' file with the following content:
{
  "hostName": "jscausesite1",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "directoryName": "./localLogs"
  }
}

21. Add a './sites/mysite/configuration/certs/jscause-cert.pem' file with the following content:
-----BEGIN CERTIFICATE-----
MIICxDCCAawCCQCCWEbD52d/6zANBgkqhkiG9w0BAQUFADAkMRAwDgYDVQQKDAdK
U0NhdXNlMRAwDgYDVQQDDAdqc2NhdXNlMB4XDTE5MDExMjA4NDExMVoXDTE5MDIx
MTA4NDExMVowJDEQMA4GA1UECgwHSlNDYXVzZTEQMA4GA1UEAwwHanNjYXVzZTCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALFog8e2f0ckBtzr3LwIlKR/
wjPEWBRmKVc2YJjhMLX4Vg6ZlxgWJPBnXDwB1n1VfXG8EZW99KUKmlcsfayZrx3y
UwUNjz7YbdolRl+L6EVE2YerkuVggqjd7dWhaWP20CMzOqWLIWAjT2uK/puRoJ1C
A8I2qgMMktPcc+oB4OZ4PEOfTHQqaLEE8K//6iDOZuG4/h2s70tLaCWoGwImFJHv
fS5yy+r67CjHObC7AD37HrOQUFTlO0gtfsbtGierEYhPpJiNjaL5QbHFvl20yx2j
YSInDK9pDhAMYOlCRd346fUqItzlXY79pvfqpp2Vpm+JpMf97/TXdZOpu8thz9sC
AwEAATANBgkqhkiG9w0BAQUFAAOCAQEAaMzMOy/ENd6ymiAt7Nk0uqjHCqyc4eDV
bnA4KDOA2EC4qLWqbswIcu70H2rcXPnaG4+X2QqAD8UoRFf80Z8b5W5PamCy6U6f
K1QkRYdsm35NlIX1aH3l6itvT1uvg1IBeXCzFc1FltM8HMZfKVorlTnC5UEvzeSS
UysXFXhaIBNajvjoWD4JSv5kv15wttNZDpCirs4dX+KsxNT6h436KJ1DgUxuX1wz
jPRnhsHeDNQxdFN+cRpafTbS9mTct3S3TR1/vQoClBe9g2ALqQkcfm6hqUxDCoIh
YERt+t9Pz1ZeBdNyffACUHSvpXN4JsnR9I0oe24G1Mfop9bQ/Z1Rpg==
-----END CERTIFICATE-----

22. Add a './sites/mysite/configuration/certs/jscause-key.pem' file with the following content:
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAsWiDx7Z/RyQG3OvcvAiUpH/CM8RYFGYpVzZgmOEwtfhWDpmX
GBYk8GdcPAHWfVV9cbwRlb30pQqaVyx9rJmvHfJTBQ2PPtht2iVGX4voRUTZh6uS
5WCCqN3t1aFpY/bQIzM6pYshYCNPa4r+m5GgnUIDwjaqAwyS09xz6gHg5ng8Q59M
dCposQTwr//qIM5m4bj+HazvS0toJagbAiYUke99LnLL6vrsKMc5sLsAPfses5BQ
VOU7SC1+xu0aJ6sRiE+kmI2NovlBscW+XbTLHaNhIicMr2kOEAxg6UJF3fjp9Soi
3OVdjv2m9+qmnZWmb4mkx/3v9Nd1k6m7y2HP2wIDAQABAoIBAF1d7vTddBDBwibk
ru/66BfG8TMDY4Og3KL8iEwNP/CU+N2IMb/Ib7ph+2XNZc/ifTmtS+ft5+IwOVgl
nyKGY2Y0UUL4huoBR5cmROomHKDQAlfnkVDMwRcUbYYgA/JLQ/Eylevn1DHfg33K
0gKX2trIkmfVExa1uFRt0kdWo8FGp5hR1saqqMay8G7JEVaZquA3ERybdbW3aRXo
M2MHUBoS7gDzny6Dc/lcTl1euBZSwOnXPDsH4EyUF/faKCDh8pU0XZQCwhVW13Ct
ItVmxAKu2dzX9911gQU+Od5yNKGbudajrHQNWMa6kwqSzjxC4IYYNe7L/tGF/Rdf
4E4zBnECgYEA3e43TrotO4MNj/vRV03B+DM3dkNOqVUSRcFIQWsaUNmBuXzI9z09
ict4hGKvPJLkkhoigigjOh0ORZPR5howQ1ewIX4X+4HtVb0KBIfFzprFY5qikd1V
MOZMAgA5Zg1A32+w8engK2LhTzRCYm1lsX0cVZkMoy6HbQZfZ9+0GuMCgYEAzKSX
Obd0ay6i7TsbW0G03IRCU/d1iiQdKVRa6XjNeAStU+qJB+2ac514c+6rczu7zaaW
YdSj70cKnYLsiFMGgMwYyvwdXUg4vR4uog7so0zVmWQVxaIr+4tMyJkJkGBpGjd4
LHX8qWUcXebALqQZcmH/9wHcSlnlyX9WOHkAsKkCgYAkHKcTQGgrzt9eFnOx6Q0u
/eaAb+NU2mrmvtSrEGpvzXS2Yf+xe12QFnO91vD8wko/G9GRrEZPJns0ByGYd5py
2snmKUZtvm6IDQKcSht9yuFjm73oTkOWeWLU0ISGfpGXyezY8F1xsd1HrhE/Qt3R
S7JYm1bbFq8ipm7P0C7WUQKBgQCwmJxzzy+kytMIm4gpARO9dFj0ssh41F9h6gym
C3xsRMT6dJuZ/t3ZRZvLl7vWrkaL2mVNuT1a4Fh1wqSxo8wp23bNvDDu7cMg2Gnv
qadl6IkvXKI5MZB4+yXgucf6EmjAmfuXip3l5H5NPjK8TRo0jgNgOffLJbbZYoya
ITmKOQKBgQDZe7bJk30R7WdIcdcqnXV2I9xOmtjm1tfO1OrsB5ce7zdt7F4n7lN7
Zx6sqGwPXc9oeW7a4dgz7HDp9M5w9HrNSwrMAFjiQ8iQy3zLfBd23vSeXNYInXMt
YinAQZIGJFBgv2w8aeDrmH7SU0f6uVot+DFVRxrqR02De7S/9C1kEQ==
-----END RSA PRIVATE KEY-----

23. Add an empty './sites/mysite2' directory.

24. Add an empty './sites/mysite2/localLogs2' directory.

25. Add an empty './sites/mysite2/workbench' directory.

26. Add a './sites/mysite2/configuration/site.json' file with the following content:
{
  "hostName": "jscausesite2",
  "canUpload": false,
  "maxPayloadSizeBytes": 0,
  "jscpExtensionRequired": "optional",
  "httpPoweredByHeader": "include",
  "httpsCertFile": "jscause-cert.pem",
  "httpsKeyFile": "jscause-key.pem",
  "tempWorkDirectory": "./workbench",
  "mimeTypes": {},
  "logging": {
    "directoryName": "/localLogs2"
  }
}

27. Copy the './sites/mysite/configuration/certs/' directory to './sites/mysite2/configuration/certs/'.

28. jscause.conf with invalid site combinations, part 1. With the content, start the server.  Nodejs must NOT quit:

- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    },
    {
      "name": "My Site 2",
      "port": 3001,
      "rootDirectoryName": "mysite2"
    }
  ],
  "logging": {}
}
- Expect:
INFO: Site 'My Site' at http://jscausesite1:3000/ assigned to server 0
INFO: Site 'My Site 2' at http://jscausesite2:3001/ assigned to server 1
INFO: The following sites were set up successfully:
INFO: 'My Site'
INFO: 'My Site 2'
INFO: Will start listening.
INFO: Server 0 listening on port 3000
INFO: Server 1 listening on port 3001

29. jscause.conf with invalid site combinations, part 2. With the content, start the server.  Nodejs must NOT quit:

- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    },
    {
      "name": "My Site 2",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Both sites 'My Site' and 'My Site 2' have the same root directory and port combination - 'mysite', 3000
ERROR: Site configuration: 'My Site 2' is attempting to use an already existing root directory and port combination - 'mysite', 3000
ERROR: Site 'My Site 2' not started.
INFO: Server 0 listening on port 3000
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite",
      "enableHTTPS": false
    },
    {
      "name": "My Site",
      "port": 3001,
      "rootDirectoryName": "mysite2"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site' is not unique.
ERROR: Site 'My Site' not started.
INFO: Server 0 listening on port 3000
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite",
      "enableHTTPS": true
    },
    {
      "name": "My Site 2",
      "port": 3000,
      "rootDirectoryName": "mysite2"
    }
  ],
  "logging": {}
}
- Expect:
WARNING: Site configuration: Site 'My Site 2' is HTTP, and is sharing HTTPS port 3000 with 'My Site'
WARNING: Site configuration: Site 'My Site 2' is using HTTP in an already assigned HTTPS port, 3000
INFO: Server 0 listening on port 3000
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite",
      "enableHTTPS": true
    },
    {
      "name": "My Site 2",
      "port": 3000,
      "rootDirectoryName": "mysite2",
      "enableHTTPS": true
    }
  ],
  "logging": {}
}
- Expect:
WARNING: Site configuration: Site 'My Site 2' is HTTPS, and would be sharing HTTPS port 3000 with 'My Site'
WARNING: Site configuration: Site 'My Site 2' is using HTTPS in an already assigned HTTPS port, 3000
INFO: Server 0 listening on port 3000
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    },
    {
      "name": "My Site 2",
      "port": 3000,
      "rootDirectoryName": "mysite2",
      "enableHTTPS": true
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site 'My Site 2' is HTTPS, and would be sharing HTTP port 3000 with 'My Site'
ERROR: Site configuration: Site 'My Site 2' is attempting to use HTTPS in an already assigned HTTP port, 3000
ERROR: Site 'My Site 2' not started.
INFO: Server 0 listening on port 3000
- Content:
- Expect:

EXPECT THIS FROM DEALING WITH both site.json files:
ERROR: Site configuration: Both sites 'My Site' and 'My Site 2' have the same host name and port combination - 'jscausesite1', 3000


- Content:
- Expect:
- Content:
- Expect:


LOGGING DISCREPANCIES BETWEEN SERVERWIDE AND PER-SITE
 - IN JUST JSCAUSE.CONF
 - BETWEEN JSCAUSE.CONF AND SITE.JSON


- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:
- Content:
- Expect:



===

Pending:

Test when the workbench directory does not exist.

mysite's localLogs was tested with absolute paths (which should prevent the server from starting.)  What other directories should be tested.
mysite config:  what if localLogs is not writeable? Or what if it's a symlink?
Test: When a mandatory value is missing from site.json (one by one.)
 - Especially the logging section.
 - So, remember that some keys are not mandatory (like the https cert ones.)
Test the multi-site combinations (when the server stops because two sites share the same name, etc.)
Test the configuration validity of tempWorkDirectory, if you haven't done so yet.
Test: What if a port is taken? (By some other application.)
Test: Check if a rootDirectoryName value is invalid.
 - As in, it must be a string, not a number.
    - What about other sibling values? "name", for example, can be an integer.  It should complain instead.
Test that https cert/key files are valid.
