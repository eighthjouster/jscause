There is a testing framework in place, but we'll need to fill it out with actual tests.
See: runTesting() and the jsTest/ folder.

They are intended for unit testing.

I was considering using NightWatchJS (or similar) for end-to-end testing.

For now, I'll try to compile a list of all the sanity checks that need to be done in order to ensure that the framework is behaving correctly.  When implementing new functionality or features, please add their corresponding sanity checks here.

List of sanity checks:
======================

Starting a server is done with `node jscause.js`

1. Create an empty folder with jscause.js in it.

2. Start the server:  Expect at least one response of the type:
ERROR: CRITICAL: Cannot load jscvendor/vendor_template.jsctpl file. The JSCause installation might be corrupted.
  nodejs must quit.

3. Add the jscvendor folder.

4. Start the server: Expect two responses:
ERROR: Cannot find jscause.conf file.
ERROR: Server not started.  No sites are running.
  nodejs must quit.

5. Add an empty jscause.conf file.

6. Start the server:  Expect the response:
ERROR: Server not started.  No sites are running.
  nodejs must quit.

7. jscause.conf with empty or invalid formats, part 1. With the content, start the server.  Nodejs must quit:
- Content:
{}
- Expect:
ERROR: Server configuration:  The following configuration attribute was not found:
ERROR: - sites
ERROR: Server not started.  No sites are running.
- Content:
[a single space, no new line]
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected end of JSON input
- Content:
[an empty new line]
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected end of JSON input
INFO: ************ All sites' configuration read at this point ********************
ERROR: Server not started.  No sites are running.
- Content:
p
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token p in JSON at position 0
ERROR: Server not started.  No sites are running.
- Content:
{
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected end of JSON input
ERROR: Server not started.  No sites are running.
- Content:
[1]
- Expect:
ERROR: "0" is not a valid configuration key.
INFO: ************ All sites' configuration read at this point ********************
ERROR: Server not started.  No sites are running.
- Content:
{
  unknown: ""
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token u in JSON at position 2
ERROR: Server not started.  No sites are running.
- Content:
{
  "unknown": unknown
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token u in JSON at position 2
ERROR: Server not started.  No sites are running.
- Content:
{
  "unknown": ""
}
- Expect:
ERROR: "unknown" is not a valid configuration key.
ERROR: Check that all the keys and values in jscause.conf are valid.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": ""
}
- Expect:
ERROR: Server configuration:  Expected an array of sites.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": []
}
- Expect:
ERROR: Configuration:  sites cannot be empty.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1]
}
- Expect:
ERROR: Server configuration: Logging: directoryName: Cannot find directory: [*]
ERROR: Server not started.  No sites are running.
- Expect:
ERROR: Configuration:  sites cannot be empty.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "unknown": 1
}
- Expect:
ERROR: "unknown" is not a valid configuration key.
ERROR: Check that all the keys and values in jscause.conf are valid.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1]p
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token p in JSON at position 14
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token } in JSON at position 16
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "unknown": 1
}
- Expect:
ERROR: "unknown" is not a valid configuration key.
ERROR: Check that all the keys and values in jscause.conf are valid.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "logging": 1
}
- Expect:
ERROR: Server configuration:  Expected a valid logging configuration value.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [1],
  "logging": {}
}
- Expect:
ERROR: Server configuration: Logging: directoryName: Cannot find directory: [*]
ERROR: Server not started.  No sites are running.

8. Add an empty './logs' directory.

9. jscause.conf with empty or invalid formats, part 2. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [1],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Missing name.
ERROR: Site (no name) not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
    },
  ],
  "logging": {}
}
- Expect:
ERROR: Invalid jscause.conf file format.
ERROR: Unexpected token ] in JSON at position 18
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Missing name.
ERROR: Site (no name) not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": ""
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Missing name.
ERROR: Site (no name) not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site' is missing port.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": ""
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration:  Site name 'My Site' has an invalid port.  Integer number expected.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site' is missing rootdirectoryname.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": ""
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site': rootdirectoryname cannot be empty.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": 4
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site configuration: Site name 'My Site': rootdirectoryname expects a string value.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR:  Cannot find directory: sites/mysite
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

10. Add an empty './sites/mysite' directory.

11. jscause.conf with empty or invalid formats, part 3. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Cannot find configuration/site.json file.
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

12. Add an empty './sites/mysite/configuration/site.json' file.

13. jscause.conf with empty or invalid formats, part 3. With the content, start the server.  Nodejs must quit:
- Content:
{
  "sites": [
    {
      "name": "My Site",
      "port": 3000,
      "rootDirectoryName": "mysite"
    }
  ],
  "logging": {}
}
- Expect:
ERROR: Site 'My Site' not started.
ERROR: Server not started.  No sites are running.

^ ACTUALLY.... it should have said something like "empty file!", "invalid json!" or something like that.  Fix.

===

Pending:

Test: What if a port is taken? (By some other application.)
Test: Check if a rootDirectoryName is invalid.
