<h2><JS rt.print('Yes2')/js></h2>
The above is interpreted as:
 - <h2<JS rt.print('Yes2'/js></h2>
which will throw an error.  This has to do with that "ignore character before js tag" thing.
 - Fix, but keeping the original intent of that ignoring.

At this point, start abstracting away the engine.

The framework should do this:
 - Enumerate the folders in sites/
   - Each folder will represent a site.

Hard-coded values should go in a global file.

ESLint.

- Implement:
  public/, json/, files/, site_routes.json and scripts/ must allow hot reloading.

Implement: GET and POST.
 - Static pages.
Implement: Submit form data.
 - Ajax.
Implement: Talk to a databse.
Implement:
 - https
 - redirections
 - modules/plugins
   - redistributable packages
 - HTTP authentication?
 - How to avoid that the server dies on error?
   - Or at least it should restart itself.
     - Avoid endless loops?

How to hide the nodeJS way to do stuff and simplify as much as possible?

A way to do the "server pre-render" stuff.

Security.
 - How to avoid, or at least warn or give control to the site, of DDOS by uploading large files or having too many requests?

Docs?
